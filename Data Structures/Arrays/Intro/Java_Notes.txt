Java always initializes empty Array slots to null if the Array contains objects, or to default values if it contains primitive types. For example, the array int [] would contain the default value of 0 for each element, float[] would contain default values of 0.0, and bool[] would contain default values of false.


for (int square : squareNumbers) {
    // Print the current value of square.
    System.out.println(square);
}
We can use it whenever we don't need the index values.


ArrayIndexOutOfBoundsException
to avoid this exception, check capacity of the array by :

int capacity = array.length;
System.out.println("The Array has a capacity of " + capacity);


// initialize the variables






public class MyClass {
    public static void main(String args[]) {
      int x=10;
      int y=25;
      int z=x+y;

      System.out.println("Sum of x+y = " + z);
      
      for(int i = 0 ; i < 10 ; i ++ ){
                System.out.println("i : " + i);
                i = i + 2;
      }
    }
}

purpose is to learn how i gets updated to 3; when loop ends it will inevitably add + 1 to i according to condition.
------> out put of this function is ------> 

Sum of x+y = 35
i : 0
i : 3
i : 6
i : 9





How to compute the number of digits of a number ?
Divide the number by 10 again and again to get the number of digits.
